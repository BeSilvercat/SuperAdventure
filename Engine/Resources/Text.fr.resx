<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="resAdventurerPass" xml:space="preserve">
    <value>Laissez-passer d'aventurier</value>
  </data>
  <data name="resAdventurerPassPlural" xml:space="preserve">
    <value>Laissez-passer d'aventurier</value>
  </data>
  <data name="resAlchemistGarden" xml:space="preserve">
    <value>Le jardin de l'Alchimiste</value>
  </data>
  <data name="resAlchemistGardenInfo" xml:space="preserve">
    <value>Tuez des rats dans le jardin de l'Alchimiste et ramenez trois queues de rat. Vous recevrez une potion de soins et 10 pièces d'or.</value>
  </data>
  <data name="resClub" xml:space="preserve">
    <value>Massue</value>
  </data>
  <data name="resClubPlural" xml:space="preserve">
    <value>Massues</value>
  </data>
  <data name="resFarmerField" xml:space="preserve">
    <value>Nettoyez le champ du fermier</value>
  </data>
  <data name="resFarmerFieldInfo" xml:space="preserve">
    <value>Tuez des serpents dans le champ du fermier et ramenez trois crocs de serpent. Vous recevrez un laissez-passer d'aventurier et 20 pièces d'or.</value>
  </data>
  <data name="resGiantSpider" xml:space="preserve">
    <value>Araignée géante</value>
  </data>
  <data name="resHealingPotion" xml:space="preserve">
    <value>Potion de soin</value>
  </data>
  <data name="resHealingPotionPlural" xml:space="preserve">
    <value>Potions de soin</value>
  </data>
  <data name="resPieceFur" xml:space="preserve">
    <value>Morceau de fourrure</value>
  </data>
  <data name="resPieceFurPlural" xml:space="preserve">
    <value>Morceaux de fourrure</value>
  </data>
  <data name="resRat" xml:space="preserve">
    <value>Rat</value>
  </data>
  <data name="resRatTail" xml:space="preserve">
    <value>Queue de rat</value>
  </data>
  <data name="resRatTailPlural" xml:space="preserve">
    <value>Queues de rat</value>
  </data>
  <data name="resRustySword" xml:space="preserve">
    <value>Epée rouillée</value>
  </data>
  <data name="resRustySwordPlural" xml:space="preserve">
    <value>Epées rouillées</value>
  </data>
  <data name="resSnake" xml:space="preserve">
    <value>Serpent</value>
  </data>
  <data name="resSnakeFang" xml:space="preserve">
    <value>Croc de serpent</value>
  </data>
  <data name="resSnakeFangPlural" xml:space="preserve">
    <value>Crocs de serpent</value>
  </data>
  <data name="resSnakeSkin" xml:space="preserve">
    <value>Peau de serpent</value>
  </data>
  <data name="resSnakeSkinPlural" xml:space="preserve">
    <value>Peaux de serpent</value>
  </data>
  <data name="resSpiderFang" xml:space="preserve">
    <value>Croc d'araignée</value>
  </data>
  <data name="resSpiderFangPlural" xml:space="preserve">
    <value>Crocs d'araignée</value>
  </data>
  <data name="resSpiderSilk" xml:space="preserve">
    <value>Soie d'araignée</value>
  </data>
  <data name="resSpiderSilkPlural" xml:space="preserve">
    <value>Soies d'araignée</value>
  </data>
  <data name="strAlchemistGarden" xml:space="preserve">
    <value>Le jardin de l'Alchimiste</value>
  </data>
  <data name="strAlchemistGardenDesc" xml:space="preserve">
    <value>Bien des plantes poussent ici</value>
  </data>
  <data name="strAlchemistHut" xml:space="preserve">
    <value>La hutte de l'Alchimiste</value>
  </data>
  <data name="strAlchemistHutDesc" xml:space="preserve">
    <value>Il y a beaucoup de plantes étranges sur les étagères.</value>
  </data>
  <data name="strBridge" xml:space="preserve">
    <value>Le pont</value>
  </data>
  <data name="strBridgeDesc" xml:space="preserve">
    <value>Un pont de pierre traverse une large rivière.</value>
  </data>
  <data name="strFarmerField" xml:space="preserve">
    <value>Le champ du fermier</value>
  </data>
  <data name="strFarmerFieldDesc" xml:space="preserve">
    <value>Vous voyez des rangées de légumes qui poussent ici.</value>
  </data>
  <data name="strFarmhouse" xml:space="preserve">
    <value>La ferme</value>
  </data>
  <data name="strFarmhouseDesc" xml:space="preserve">
    <value>Il y a une petite ferme, avec un fermier devant.</value>
  </data>
  <data name="strForest" xml:space="preserve">
    <value>Forêt</value>
  </data>
  <data name="strForestDesc" xml:space="preserve">
    <value>Des toiles d'araignée recouvrent les arbres dans cette forêt.</value>
  </data>
  <data name="strGuardPost" xml:space="preserve">
    <value>Le poste de garde</value>
  </data>
  <data name="strGuardPostDesc" xml:space="preserve">
    <value>Il y a un grand, et impressionnant garde, ici.</value>
  </data>
  <data name="strHome" xml:space="preserve">
    <value>Maison</value>
  </data>
  <data name="strHomeDesc" xml:space="preserve">
    <value>Vous êtes chez vous...</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="strTownSquare" xml:space="preserve">
    <value>La place du village</value>
  </data>
  <data name="strTownSquareDesc" xml:space="preserve">
    <value>Vous voyez une fontaine...</value>
  </data>
</root>